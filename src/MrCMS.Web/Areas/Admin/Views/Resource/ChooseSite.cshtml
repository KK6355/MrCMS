@model MrCMS.Web.Admin.Models.ChooseSiteParams

@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPopup.cshtml";
    var siteOptions = ViewData["site-options"] as List<SelectListItem> ?? new List<SelectListItem>();
}
@if (!siteOptions.Any())
{
    <fieldset>
        <legend>
            @await Html.Resource("Admin Resources Cannot Override", "Cannot Override")

        </legend>
        <p>
            You already have site overrides for @Model.Key for all sites.
        </p>
    </fieldset>
}
else
{
    using (Html.BeginForm("Add", "Resource", FormMethod.Get, new {id = "resource-choose-site"}))
    {
        <fieldset>
            <legend>
                @await Html.Resource("Admin Resources Choose Site", "Choose site")
                <span class="btn-group d-inline pull-right">
                    <button type="submit" class="btn-primary btn">@await Html.Resource("Proceed")</button>
                </span>
            </legend>
            @if (Context.Request.Referer() != null)
            {
                @Html.Hidden("referrer", Context.Request.Referer())
            }
            @Html.HiddenFor(siteParams => siteParams.Key)
            @Html.HiddenFor(siteParams => siteParams.Language)
            <div class="form-group">
                @Html.LabelFor(siteParams => siteParams.Id, await Html.Resource("Site"))
                @Html.DropDownListFor(siteParams => siteParams.Id, siteOptions, new {@data_val = "true", data_val_required = "Please select a site.", @class = "form-control"})
                @Html.ValidationMessageFor(siteParams => siteParams.Id)
            </div>
        </fieldset>
    }
}