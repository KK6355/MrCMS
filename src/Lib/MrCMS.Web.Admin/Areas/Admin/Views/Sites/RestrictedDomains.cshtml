@using System.Linq
@using MrCMS.Web.Admin.Services
@model MrCMS.Web.Admin.Models.UpdateSiteModel
@inject ISiteAdminService AdminService
@{
    var redirectedDomains = await AdminService.GetRedirectedDomains(Model.Id);
}
<div id="restricted-domains">
    <hr/>
    <div class="pull-right">
        @Html.ActionLink("Add", "Add", "RedirectedDomain", new {id = Model.Id}, new {@class = "btn btn-secondary btn-sm", data_toggle = "fb-modal"})
    </div>
    <h4>@await Html.Resource("Admin Redirected Domains", "Redirected Domains")</h4>
    @if (redirectedDomains.Any())
    {
        <table class="table table-striped table-condensed">
            <thead>
            <tr>
                <th>
                    Url
                </th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var domain in redirectedDomains)
            {
                <tr>
                    <td>@domain.Url</td>
                    <td>
                        <button class="btn btn-danger" data-toggle="confirmation" data-value="@Url.Action("Delete", "RedirectedDomain", new {id = domain.Id, siteId = domain.Site.Id})" data-id="@domain.Id" data-placement="bottom">Delete</button>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
    else
    {
        <p>@await Html.Resource("Admin Redirected Domains None", "There are currently no redirected domains for this site")</p>
    }
</div>